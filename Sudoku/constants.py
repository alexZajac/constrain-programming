#HAND INITIALIZED SUDOKU BOARDS

sudoku_beginner = [ 
    [7, 3, 0, 6, 0, 0, 8, 0, 2],
    [8, 4, 0, 9, 0, 3, 0, 0, 1],
    [9, 0, 1, 0, 8, 0, 3, 0, 4],
    [2, 8, 0, 3, 0, 9, 0, 5, 7],
    [4, 0, 3, 8, 0, 0, 9, 2, 6],
    [5, 0, 9, 0, 2, 6, 4, 0, 8],
    [1, 0, 7, 4, 0, 2, 0, 8, 3],
    [6, 9, 0, 7, 3, 8, 0, 1, 0],
    [3, 2, 8, 0, 6, 0, 7, 0, 0],
]

sudoku_easy = [
    [7, 3, 0, 0, 0, 0, 8, 0, 2],
    [8, 4, 0, 9, 0, 0, 0, 0, 1],
    [9, 0, 0, 0, 8, 0, 3, 0, 4],
    [2, 8, 0, 3, 0, 9, 0, 5, 0],
    [4, 0, 3, 8, 0, 0, 0, 2, 6],
    [5, 0, 0, 0, 2, 6, 4, 0, 0],
    [1, 0, 7, 4, 0, 2, 0, 8, 0],
    [6, 9, 0, 7, 0, 8, 0, 1, 0],
    [3, 0, 8, 0, 6, 0, 7, 0, 0],
]

sudoku_medium = [
    [7, 0, 0, 0, 0, 0, 8, 0, 2],
    [8, 4, 0, 9, 0, 0, 0, 0, 1],
    [9, 0, 0, 0, 8, 0, 0, 0, 4],
    [2, 0, 0, 3, 0, 9, 0, 5, 0],
    [4, 0, 3, 0, 0, 0, 0, 2, 6],
    [5, 0, 0, 0, 2, 0, 4, 0, 0],
    [1, 0, 0, 4, 0, 2, 0, 8, 0],
    [6, 0, 0, 7, 0, 8, 0, 1, 0],
    [3, 0, 8, 0, 6, 0, 7, 0, 0],
]

sudoku_hard = [
    [7, 0, 0, 0, 0, 0, 0, 0, 2],
    [0, 4, 0, 9, 0, 0, 0, 0, 1],
    [9, 0, 0, 0, 8, 0, 0, 0, 0],
    [2, 0, 0, 3, 0, 9, 0, 5, 0],
    [0, 0, 3, 0, 0, 0, 0, 2, 6],
    [5, 0, 0, 0, 2, 0, 4, 0, 0],
    [1, 0, 0, 0, 0, 2, 0, 8, 0],
    [6, 0, 0, 7, 0, 0, 0, 1, 0],
    [3, 0, 0, 0, 6, 0, 7, 0, 0],
]

sudoku_hell = [
    [0, 0, 0, 0, 0, 0, 0, 0, 2],
    [0, 4, 0, 9, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 8, 0, 0, 0, 0],
    [2, 0, 0, 3, 0, 0, 0, 5, 0],
    [0, 0, 3, 0, 0, 0, 0, 2, 0],
    [0, 0, 0, 0, 2, 0, 4, 0, 0],
    [1, 0, 0, 0, 0, 2, 0, 0, 0],
    [6, 0, 0, 0, 0, 0, 0, 1, 0],
    [0, 0, 0, 0, 6, 0, 7, 0, 0],
]

def Get_empty_cells(difficulty, size):
    """Maps the difficulty to number of empty cells"""
    if(difficulty == 'beginner'):
        return size**2 - 50
    elif (difficulty == 'easy'):
        return size**2 - 40
    elif (difficulty == 'medium'):
        return size**2 - 33
    elif (difficulty == 'hard'):
        return size**2 - 26
    elif (difficulty == 'hell'):
        return size**2 - 17